import { ChatGoogleGenerativeAI } from "@langchain/google-genai";
import productModel from "../../../../models/Product.js";
import chatbotModel from "../../../../models/Chatbot.js";
import { ChatOpenAI } from "@langchain/openai";

const model = new ChatOpenAI({
    openAIApiKey: process.env.OPENAI_API_KEY,
    modelName: "gpt-4o",
    temperature: 0.3,
});
export async function intentClassifier({ messages, email }) {
    const pastMessages = await chatbotModel.findByEmail(email);

    const lastMsg = messages[messages.length - 1]?.content;

    const products = await productModel.getAll();

    const productList = products
        .map(p => `${p.name} (gi√° ${p.price}ƒë)`)
        .join(", ");

    const intent = await model.invoke([
        ["system", `
            B·∫°n l√† b·ªô ph√¢n lo·∫°i intent. H√£y ph√¢n lo·∫°i c√¢u h·ªèi kh√°ch th√†nh 1 trong 4 nh√≥m: 
- **consult**: kh√°ch mu·ªën t∆∞ v·∫•n ch·ªçn s·∫£n ph·∫©m ph√π h·ª£p v·ªõi nhu c·∫ßu.
- **sql**: kh√°ch mu·ªën truy v·∫•n d·ªØ li·ªáu (li·ªát k√™ ƒë∆°n h√†ng, s·∫£n ph·∫©m gi·∫£m gi√°, s·∫£n ph·∫©m ƒë√£ mua...).
- **cancel**: kh√°ch mu·ªën h·ªßy ƒë∆°n h√†ng.
- **policy**: kh√°ch h·ªèi v·ªÅ ch√≠nh s√°ch ƒë·ªïi tr·∫£, giao h√†ng, b·∫£o h√†nh.

ƒê√¢y l√† l·ªãch s·ª≠ tr√≤ chuy·ªán c·ªßa b·∫°n v·ªõi kh√°ch h√†ng:
${pastMessages.map(m => {
            const speaker = m.role === "user" ? "KH" : "AI";
            return `${speaker}: ${m.content}\nType: ${m.type}`;
        }).join("\n\n")}

D·ª±a v√†o l·ªãch s·ª≠ tr√≤ chuy·ªán gi·ªØa ng∆∞·ªùi d√πng v√† b·∫°n tr·∫£ v·ªÅ duy nh·∫•t 1 t·ª´: consult, sql, policy, ho·∫∑c cancel.

S·∫£n ph·∫©m ƒëang b√°n: ${productList}
`],
        ["human", `C√¢u h·ªèi c·ªßa kh√°ch: "${lastMsg}", Email c·ªßa kh√°ch: "${email}". Ch·ªâ tr·∫£ v·ªÅ 1 t·ª´: consult, sql, policy ho·∫∑c cancel.`]
    ]);

    const result = intent.content?.trim().toLowerCase();
    console.log("Guest question:", lastMsg);
    console.log("üü® Raw AI intent result:", intent.content);
    console.log("‚úÖ Parsed intent:", result);

    return {
        messages,
        next: result
    };
}