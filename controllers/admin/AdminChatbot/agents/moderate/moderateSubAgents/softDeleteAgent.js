import { ChatOpenAI } from "@langchain/openai";
import { loadSchema } from "../../../../../admin/schemaLoader.js";
import pool from "../../../../../../models/db.js";
import { extractSQL } from "../../../../../api/Chatbot/extra/parser.js";

const model = new ChatOpenAI({
    openAIApiKey: process.env.OPENAI_API_KEY,
    modelName: "gpt-4o",
    temperature: 0.2,
});

export async function softDeleteAgent({ flagged, messages }) {
    const schema = await loadSchema();

    const summaryPrompt = `
B·∫°n l√† AI h·ªó tr·ª£ x·ª≠ l√Ω b√¨nh lu·∫≠n vi ph·∫°m.

== M√î T·∫¢ C∆† S·ªû D·ªÆ LI·ªÜU ==
${schema}

== D·ªÆ LI·ªÜU B·ªä G·∫ÆN C·ªú ==
${(flagged || [])
            .map((c) => `- ID: ${c.id}, N·ªôi dung: ${c.description}`)
            .join("\n")}

== Y√äU C·∫¶U ADMIN ==
"${messages.at(-1)?.content}"

== H∆Ø·ªöNG D·∫™N ==
Ch·ªâ sinh c√¢u l·ªánh SQL n·∫øu admin y√™u c·∫ßu "x√≥a", "delete", "lo·∫°i b·ªè"... 

- KH√îNG gi·∫£i th√≠ch. Tr·∫£ v·ªÅ duy nh·∫•t 1 block SQL b√™n trong:
\`\`\`sql
DELETE FROM ...
\`\`\`
`;

    const result = await model.invoke(summaryPrompt);
    const raw = result.content.trim();
    const sql = extractSQL(raw);

    console.log("üß† Raw LLM Output:\n", raw);
    console.log("üß† Extracted SQL:", sql);

    if (sql?.toLowerCase().startsWith("delete")) {
        try {
            const [rows] = await pool.query(sql);
            const affected = rows.affectedRows || 0;

            console.log("‚úÖ Rows affected:", affected);
            console.log("üß† AI ƒë√£ th·ª±c thi SQL:", sql);

            const idMatch = sql?.match(/[`"]?id[`"]?\s*=\s*(\d+)/i);
            const id = idMatch ? parseInt(idMatch[1]) : null;

            return {
                sql,
                deleted_count: affected,
                deleted: id ? [{ id }] : [],
                summary: `‚úÖ ƒê√£ th·ª±c thi l·ªánh x√≥a b·∫±ng AI:\n${sql}`,
                current_step: "__end__"
            };
        } catch (err) {
            return {
                summary: `‚ùå L·ªói khi th·ª±c thi SQL:\n${err.message}`,
                current_step: "__end__"
            };
        }
    } else {
        return {
            summary: `‚ÑπÔ∏è Kh√¥ng c√≥ c√¢u l·ªánh DELETE h·ª£p l·ªá.\nƒê·∫ßu ra AI:\n${raw}`,
            current_step: "__end__"
        };
    }
}
